node("deploy_server"){
try{
    stage("Prepare test data"){
        build job: 'Test/test-data-preparation', parameters: [
               [$class: 'StringParameterValue', name: 'DEPLOYMENT_ENV', value: DEPLOYMENT_ENV]]
               sh "uname"
    }
    stage("Api tests"){
           build job: 'Test/java-maven-api-tests', parameters: [
           [$class: 'StringParameterValue', name: 'DEPLOYMENT_ENV', value: DEPLOYMENT_ENV]]
           sh "uname"
      }
    stage("UI Tests"){
        build job: 'Test/ui-tests', parameters: [
                   [$class: 'StringParameterValue', name: 'DEPLOYMENT_ENV', value: DEPLOYMENT_ENV]]
                   sh "uname"
    }
    stage("Security Tests"){
        build job: 'Test/security/nikto'
    }
    stage("Performance Tests"){
        build job: 'Test/jmeter-performance'
    }
    
    stage("Send logs to ELK"){
       currentBuild.result = 'SUCCESS'
        logstashSend failBuild: true, maxLines: 1000
    }
}catch(Exception e){
    println e
    currentBuild.result = "FAILURE"
}

if (currentBuild.result == "FAILURE"){

//send email only when fails 
 emailext body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
                  recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                  subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}" ,
                  to: "ricardo.santos@accesa.eu, adrian.moldovan@accesa.eu"
//send failure logs to elk 
println "sending logs to elk "
logstashSend failBuild: true, maxLines: 1000
}
}
